// <auto-generated />
using System;
using System.Collections.Generic;
using DatingApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DatingApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230606212159_UserLikesAndMatchesAndMatchesAndConversationProgressMigration")]
    partial class UserLikesAndMatchesAndMatchesAndConversationProgressMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DatingApp.Models.MatchesAndConversationProgress", b =>
                {
                    b.Property<int>("MatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MatchId"));

                    b.Property<bool>("ActiveMatch")
                        .HasColumnType("boolean");

                    b.Property<int>("ConversationLevel")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateOfLastInteraction")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateOfMatch")
                        .HasColumnType("timestamp with time zone");

                    b.Property<List<int>>("MatchedUsersIds")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.HasKey("MatchId");

                    b.ToTable("MatchesAndConversationProgress");
                });

            modelBuilder.Entity("DatingApp.Models.StandardApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<List<int>>("AgeRange")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CompanyName")
                        .HasColumnType("text");

                    b.Property<string>("CourseName")
                        .HasColumnType("text");

                    b.Property<double>("CurrentLocationLatitude")
                        .HasColumnType("double precision");

                    b.Property<double>("CurrentLocationLongitude")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DesiredRangeinKm")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<string>("Hometown")
                        .HasColumnType("text");

                    b.Property<List<string>>("Interests")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<bool>("IsActiveUser")
                        .HasColumnType("boolean");

                    b.Property<string>("JobTitle")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nationality")
                        .HasColumnType("text");

                    b.Property<int>("Orientation")
                        .HasColumnType("integer");

                    b.Property<List<string>>("Photos")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("UniversityName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("StandardApplicationUser");
                });

            modelBuilder.Entity("DatingApp.Models.UserLikesAndMatches", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<List<int>>("Matches")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<List<int>>("ReceivedLikes")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<List<int>>("SentLikes")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.HasKey("Id");

                    b.ToTable("UserLikesAndMatches");
                });
#pragma warning restore 612, 618
        }
    }
}
